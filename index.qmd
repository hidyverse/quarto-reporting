---
format:
  revealjs:
    theme: [default, assets/custom.scss]
    logo: assets/dsi.png
    code-link: true
---

# Quarto for Reproducible Reporting {background-image="assets/geometryClouds.png," background-opacity=".6"}

Fall 2022 Literate Programming Workshops

Heidi Steiner, PSM \| Data Science Educator

```{r}
#| label: setup
#| include: false


library(knitr)
library(kableExtra)
```

## `r fontawesome::fa("exclamation-triangle")` {.center}

I am a health scientist and NOT a computer scientist!

I am very much still learning Quarto, RMarkdown, R, etc.

::: {.footer .center style="width: 80%;"}
Content is a mixture of \[RStudio Education materials\](https://github.com/rstudio-education), CC-BY. All art (unless otherwise noted) is by \[Desirée De Leon\](https://desiree.rbind.io/) and \[Allison Horst\](https://www.allisonhorst.com/), CC-BY-NC-ND.
:::

::: notes
`r fontawesome::fa("step-backward")`

How are we on installations?

Tour of RStudio IDE

I highly recommend you sign up for a [free RStudio cloud account](https://rstudio.cloud/plans/free "https://rstudio.cloud/plans/free") for this workshop to avoid installation issues. You can always work to recreate materials on your local machine later on. If you choose the cloud route, that's all you need. All installations will follow as needed.

 

If you prefer your local machine, please install [quarto](https://quarto.org/docs/get-started/ "https://quarto.org/docs/get-started/"), R packages ggplot2, knitr, rmarkdown, skimr, survival, tidyverse (via \`install.packages(c())\`), [Python](https://www.python.org/downloads/ "https://www.python.org/downloads/") and python package [matplotlib](https://matplotlib.org/stable/users/installing/index.html "https://matplotlib.org/stable/users/installing/index.html").

\^\^ There are probably things I'm forgetting so add to this list as needed
:::

## Quarto

> Quarto® is an open-source scientific and technical publishing system built to dramatically improve the process of creating and collaborating

![](images/horst_quarto_schematic.png){fig-alt="Graphic showing R, Python, Julia, and Observable languages flowing to Quarto and then on to html, PDF, and MS Word documents"}

::: notes
lowering the activation energy to reproducible reporting in MANY ways

I think it's totally appropriate to stop here and ask how folks feel about the term open/reproducible
:::

## 

Quarto documents, and other **"literate programming"** documents such as `.rmd` and `.ipynb`, include code, prose, and results in a single human-readable file

![](images/rmarkdown_wizards.png){style="margin-top: -10px;" width="800"}

::: notes
same here! stop and ask folks how they feel about the term literate programming
:::

## Change your mental model

[![](images/drakeMeme.jpeg){fig-alt="drake meme shaking head at copy/paste and encouraging source -> output models" fig-align="center"}](https://twitter.com/ijeamaka_a/status/1367242513782763521)

## Live Demo `r fontawesome::fa("location-arrow")` {.your-turn}

-   Clone `https://github.com/hidyverse/quarto-examples` to RStudio

<!-- -->

-   Open `Intro_to_Quarto.qmd`, and render `r fontawesome::fa("play")`

::: callout-tip
## Hints

-   "Preview in Viewer Pane" vs "Window"

-   If you're not new to these concepts, feel free to be flexible with these directions! Comfy outside of RStudio? Give VSCode a try.

-   RStudio *should* tell you when something needs to be installed...pay close attention!
:::

## Change your mental model

::: columns
::: {.column style="width: \"50%;"}
Source ↔ output

![](images/word.png){fig-alt="screenshot of blank word.docx" width="390"}
:::

::: {.column style="width"}
Source → output

![](images/Screen%20Shot%202022-08-26%20at%209.11.15%20AM.png)
:::
:::

## Change your mental model

::: columns
::: {.column style="width: \"50%;"}
Source ↔ output

![](images/haba-elise.jpg){fig-alt="Small plastic doll of a white girl in a pink and green outfit"}
:::

::: {.column style="width"}
Source → output

![](images/doll.png){fig-alt="plastic doll with textile clothing, hair of a white girl in pink and green outfit"}
:::
:::

## Same doll, different occasions

[![](images/reproducibility_dolls.png){fig-alt="plastic doll with textile clothing, hair of white girl wearing four different themed outfits" fig-align="center" width="3000"}](https://www.americangirl.com/shop/c/welliewishers)

## Same ~~doll~~ source, different occasions

![](images/reproducibility_dolls.png){fig-alt="plastic doll with textile clothing, hair of white girl wearing four different themed outfits" fig-align="center" width="3000"}

## Let's dive in. {.darkbackground background-image="images/diveInQuarto.png," background-size="contain," background-opacity=".6,"}

## Anatomy of a `.qmd` {.center}

::: columns
::: {.column style="width: 20%; color: #A95C42; font-size: 1.2em;"}
1.  Metadata
2.  Markup
3.  Code
4.  Output
:::

::: {.column style="width: 75%;"}
![](images/anatomy.jpeg){fig-alt="handrawn graphic of literate programming document" fig-align="right"}
:::
:::

## Metadata: YAML

::: columns
::: {.column style="width: 50%"}
"YAML Ain't Markup Language"

``` {.yaml execute="FALSE"}
---

key: value

---
```

-   Save options in your YAML

    -   "setup" chunk

-   `format: html`
:::

::: {.column style="width: 50%"}
![](images/orchestra.jpg){fig-alt="the back of an illustrated orchestra conductor" fig-align="right"}
:::
:::

## Live Demo `r fontawesome::fa("location-arrow")` {.your-turn}

-   Update the YAML header of `Intro_to_Quarto.qmd` to add a Table of Contents

-   Add links for the included code

::: callout-tip
## Hints

-   Did you try RStudio's tab-completion feature?
-   re-render often when you make changes to your YAML!
-   Do you know how to search documentation? https://quarto.org/docs/reference/
:::

::: notes
change format: html to format:\n html:\\n toc: true\\ncode-link: true

maybe have to pop open in full size window to see the TOC
:::

## Markdown (...is a Markup language)

``` markdown
# Heading 1
This is a sentence with some **bold text**, some *italic text* and an 
![image](image.png){fig-alt="Alt text for this image"}.
```

![](images/markdown.png){width="496"}

::: {style="font-size: .8em"}
\^\^ Check out [commonmark](https://commonmark.org/help/tutorial/) for a tutorial on common markup languages!
:::

::: notes
stop and show visual editor here
:::

## Live Demo `r fontawesome::fa("location-arrow")` {.your-turn}

With or without the visual editor...

-   Add an image

-   Add a blockquote text section

## Code

::: columns
::: {.column style="width: 60%"}
    ```{{r}}
    library(dplyr)
    mtcars |> 
      group_by(cyl) |> 
      summarize(mean = mean(mpg))
    ```

</br>

    ```{{python}}
    from siuba import _, group_by, summarize
    from siuba.data import mtcars
    (mtcars
      >> group_by(_.cyl)
      >> summarize(avg_mpg = _.mpg.mean())
      )
    ```
:::

::: {.column style="width: 35%; padding-left: 50px;"}
    ```{{ojs}}
    {
      let sum = 0;
      for (let i = 0; i < 10; ++i) {
        sum += i;
      }
      return sum;
    }
    ```

</br>

    ```{{julia}}
    using Plots

    plot(sin, 
         x->sin(2x), 
         0, 
         2π, 
         leg=false, 
         fill=(0,:lavender))
    ```
:::
:::

## Live Demo `r fontawesome::fa("location-arrow")` {.your-turn}

-   Investigate `Intro_to_Python.ipynb` (*Hint*: Can you open it?)

-   Find your Terminal within RStudio

-   Convert your `ipynb` to `qmd` with

    `quarto convert Intro_to_Python.ipynb`

-   Render `Intro_to_Python.qmd`

::: notes
the python install is here and matplotlib...just keep pressing render until everything is installed and follow the prompts to install what is needed.

python -m pip install -U pip (rstudio cloud has pip)

python -m pip install -U matplotlib
:::

## Don't like RStudio?

![](https://quarto.org/docs/tools/images/jupyterlab-preview.png){fig-alt="A screenshot of a Quarto document rendered inside JupyterLab" width="395"}

## Keep your happy place

![](https://quarto.org/docs/computations/images/python-vscode.png){fig-alt="A screenshot of a Quarto document rendered inside VSCode" width="395"}

## Nearly limitless output formats {.center .middle}

![](images/knitOutput.png){style="margin-top: 20px;" fig-alt="illustration of brown hedgehod wearing a yellow knitted beanie knitting a turquoise scarf surrounded by possible output options such as pdf and word doc" width="850"}

## Live Demo `r fontawesome::fa("location-arrow")` {.your-turn}

-   `quarto create-project mybook --type=book`

-   `quarto preview mybook/`

-   `quarto render mybook/`

<!-- -->

-   Peep the `_quarto.yml` file and PDF output

::: notes
this broke for me in cloud right before the workshop :)
:::

## Render and Send 'er `r fontawesome::fa("paper-plane")`

In general, if it renders, it's safe to send!

![](images/Screen%20Shot%202022-08-26%20at%2012.14.25%20PM.png){fig-alt="screenshot of UArizona RStudio Connect service"}

## Style your `qmd`

CSS

``` {.css echo="fenced"}
.body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}
```

scss = CSS +

``` {.scss echo="fenced"}
/*-- scss:defaults --*/

$font-stack: Helvetica, sans-serif;
$primary-color: #333;


/*-- scss:rules --*/

.body {
  font: 100% $font-stack;
  color: $primary-color;
}
```

::: notes
I live on this website: https://www.w3schools.com/cssref/default.asp
:::

## Awesome Quarto `r fontawesome::fa("search")` {.center}

[![](images/Screen%20Shot%202022-08-26%20at%2012.49.09%20PM.png){style="width: 20pt;" fig-align="center" width="291"}](https://github.com/mcanouil/awesome-quarto)

::: callout-tip
## Pro-Tip

"awesome" lists are often great resources!
:::

## Summary {style="width: 115%;"}

-   Quarto is a "batteries included" command line tool that shares syntax across output types/languages/editors

-   Learn about revealjs presentations in quarto from this [slidedeck](https://github.com/hidyverse/quarto-reporting)

-   Send me feedback! `r fontawesome::fa("comments")` <https://tinyurl.com/y2sbf58r>

![](images/qmd_render_schema.png){style="margin-bottom: -40px; position: absolute; bottom: -.10px;" fig-alt="illustration of quarto's rendering process" fig-align="center" width="7547"}

::: notes
Extra Your Turn `r fontawesome::fa("location-arrow")`

-   Clone a GitHub wiki of your choice (but ideally a new example because this is a weird process)

    -   Install {usethis}

-   Create `qmd` files that are copies of each of the wiki's `md` files

    -   Make some changes

-   Render each `qmd`

-   Authenticate GitHub with {usethis}

-   Commit and push changes

https://gist.github.com/z3tt/3dab3535007acf108391649766409421
:::
